"""init

Revision ID: d0818eee6354
Revises: 
Create Date: 2024-10-30 00:07:14.889481

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd0818eee6354'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('walls',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('image_id', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_walls_id'), 'walls', ['id'], unique=False)
    op.create_table('holds',
    sa.Column('bbox', sa.JSON(), nullable=True),
    sa.Column('mask', sa.LargeBinary(), nullable=True),
    sa.Column('wall_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['wall_id'], ['walls.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_holds_id'), 'holds', ['id'], unique=False)
    op.create_table('routes',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('grade', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('wall_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['wall_id'], ['walls.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_routes_id'), 'routes', ['id'], unique=False)
    op.create_table('recordings',
    sa.Column('route_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('frequency', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recordings_id'), 'recordings', ['id'], unique=False)
    op.create_table('route_holds',
    sa.Column('route_id', sa.Integer(), nullable=True),
    sa.Column('hold_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['hold_id'], ['holds.id'], ),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], )
    )
    op.create_table('sensors',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('ip_address', sa.String(), nullable=False),
    sa.Column('hold_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hold_id'], ['holds.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sensors_id'), 'sensors', ['id'], unique=False)
    op.create_table('sensor_readings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recording_id', sa.Integer(), nullable=True),
    sa.Column('hold_id', sa.Integer(), nullable=True),
    sa.Column('x', sa.Float(), nullable=False),
    sa.Column('y', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['hold_id'], ['holds.id'], ),
    sa.ForeignKeyConstraint(['recording_id'], ['recordings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sensor_readings')
    op.drop_index(op.f('ix_sensors_id'), table_name='sensors')
    op.drop_table('sensors')
    op.drop_table('route_holds')
    op.drop_index(op.f('ix_recordings_id'), table_name='recordings')
    op.drop_table('recordings')
    op.drop_index(op.f('ix_routes_id'), table_name='routes')
    op.drop_table('routes')
    op.drop_index(op.f('ix_holds_id'), table_name='holds')
    op.drop_table('holds')
    op.drop_index(op.f('ix_walls_id'), table_name='walls')
    op.drop_table('walls')
    # ### end Alembic commands ###
